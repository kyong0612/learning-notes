// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: enum/v1/enum.proto

package enumv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AWS int32

const (
	AWS_AWS_UNSPECIFIED           AWS = 0
	AWS_AWS_ACCOUNT               AWS = 1
	AWS_AWS_ACM                   AWS = 2
	AWS_AWS_API_GATEWAY           AWS = 3
	AWS_AWS_APP_RUNNER            AWS = 4
	AWS_AWS_APPFLOW               AWS = 5
	AWS_AWS_APPSYNC               AWS = 6
	AWS_AWS_ATHENA                AWS = 7
	AWS_AWS_AUDIT_MANAGER         AWS = 8
	AWS_AWS_AUTO_SCALING          AWS = 9
	AWS_AWS_GLUE                  AWS = 10
	AWS_AWS_BACKUP                AWS = 11
	AWS_AWS_CLOUDFORMATION        AWS = 12
	AWS_AWS_CLOUDFRONT            AWS = 13
	AWS_AWS_CLOUDTRAIL            AWS = 14
	AWS_AWS_CLOUDWATCH_ALARMS     AWS = 15
	AWS_AWS_CLOUDWATCH_LOGS       AWS = 16
	AWS_AWS_CODE_ARTIFACT         AWS = 17
	AWS_AWS_CODE_BUILD            AWS = 18
	AWS_AWS_CODE_PIPELINE         AWS = 19
	AWS_AWS_COMPREHEND            AWS = 20
	AWS_AWS_CONFIG                AWS = 21
	AWS_AWS_CONNECT               AWS = 22
	AWS_AWS_DMS                   AWS = 23
	AWS_AWS_DOCUMENT_DB           AWS = 24
	AWS_AWS_DYNAMODB              AWS = 25
	AWS_AWS_EC2                   AWS = 26
	AWS_AWS_ECR                   AWS = 27
	AWS_AWS_ECS                   AWS = 28
	AWS_AWS_EFS                   AWS = 29
	AWS_AWS_EKS                   AWS = 30
	AWS_AWS_ELASTIC_TRANSCODER    AWS = 31
	AWS_AWS_ELASTIC_BEANSTALK     AWS = 32
	AWS_AWS_ELASTICACHE           AWS = 33
	AWS_AWS_ELB                   AWS = 34
	AWS_AWS_ELBV2                 AWS = 35
	AWS_AWS_EMR                   AWS = 36
	AWS_AWS_EVENTBRIDGE           AWS = 37
	AWS_AWS_FINSPACE              AWS = 38
	AWS_AWS_FIREHOSE              AWS = 39
	AWS_AWS_FORECAST              AWS = 40
	AWS_AWS_FRAUD_DETECTOR        AWS = 41
	AWS_AWS_FSX                   AWS = 42
	AWS_AWS_GLACIER               AWS = 43
	AWS_AWS_GLUE_DATABREW         AWS = 44
	AWS_AWS_GUARDDUTY             AWS = 45
	AWS_AWS_IAM                   AWS = 46
	AWS_AWS_KINESIS               AWS = 47
	AWS_AWS_KINESIS_VIDEO_STREAMS AWS = 48
	AWS_AWS_KMS                   AWS = 49
	AWS_AWS_LAMBDA                AWS = 50
	AWS_AWS_LEX                   AWS = 51
	AWS_AWS_LOCATION              AWS = 52
	AWS_AWS_LOOKOUT               AWS = 53
	AWS_AWS_LOOKOUT_EQUIPMENT     AWS = 54
	AWS_AWS_LOOKOUT_METRICS       AWS = 55
	AWS_AWS_MANAGED_BLOCKCHAIN    AWS = 56
	AWS_AWS_MEMORY_DB             AWS = 57
	AWS_AWS_MQ                    AWS = 58
	AWS_AWS_MSK                   AWS = 59
	AWS_AWS_MWAA                  AWS = 60
	AWS_AWS_NEPTUNE               AWS = 61
	AWS_AWS_NETWORK_FIREWALL      AWS = 62
	AWS_AWS_OPENSEARCH            AWS = 63
	AWS_AWS_PROTON                AWS = 64
	AWS_AWS_QLDB                  AWS = 65
	AWS_AWS_RDS                   AWS = 66
	AWS_AWS_REDSHIFT              AWS = 67
	AWS_AWS_ROUTE53               AWS = 68
	AWS_AWS_S3                    AWS = 69
	AWS_AWS_SAGEMAKER             AWS = 70
	AWS_AWS_SECRETS_MANAGER       AWS = 71
	AWS_AWS_SECURITY_HUB          AWS = 72
	AWS_AWS_SES                   AWS = 73
	AWS_AWS_SHIELD                AWS = 74
	AWS_AWS_SNS                   AWS = 75
	AWS_AWS_SQS                   AWS = 76
	AWS_AWS_SSM                   AWS = 77
	AWS_AWS_TIMESTREAM            AWS = 78
	AWS_AWS_TRANSFER              AWS = 79
	AWS_AWS_TRANSLATE             AWS = 80
	AWS_AWS_WAF                   AWS = 81
	AWS_AWS_WORKSPACES            AWS = 82
	AWS_AWS_XRAY                  AWS = 83
)

// Enum value maps for AWS.
var (
	AWS_name = map[int32]string{
		0:  "AWS_UNSPECIFIED",
		1:  "AWS_ACCOUNT",
		2:  "AWS_ACM",
		3:  "AWS_API_GATEWAY",
		4:  "AWS_APP_RUNNER",
		5:  "AWS_APPFLOW",
		6:  "AWS_APPSYNC",
		7:  "AWS_ATHENA",
		8:  "AWS_AUDIT_MANAGER",
		9:  "AWS_AUTO_SCALING",
		10: "AWS_GLUE",
		11: "AWS_BACKUP",
		12: "AWS_CLOUDFORMATION",
		13: "AWS_CLOUDFRONT",
		14: "AWS_CLOUDTRAIL",
		15: "AWS_CLOUDWATCH_ALARMS",
		16: "AWS_CLOUDWATCH_LOGS",
		17: "AWS_CODE_ARTIFACT",
		18: "AWS_CODE_BUILD",
		19: "AWS_CODE_PIPELINE",
		20: "AWS_COMPREHEND",
		21: "AWS_CONFIG",
		22: "AWS_CONNECT",
		23: "AWS_DMS",
		24: "AWS_DOCUMENT_DB",
		25: "AWS_DYNAMODB",
		26: "AWS_EC2",
		27: "AWS_ECR",
		28: "AWS_ECS",
		29: "AWS_EFS",
		30: "AWS_EKS",
		31: "AWS_ELASTIC_TRANSCODER",
		32: "AWS_ELASTIC_BEANSTALK",
		33: "AWS_ELASTICACHE",
		34: "AWS_ELB",
		35: "AWS_ELBV2",
		36: "AWS_EMR",
		37: "AWS_EVENTBRIDGE",
		38: "AWS_FINSPACE",
		39: "AWS_FIREHOSE",
		40: "AWS_FORECAST",
		41: "AWS_FRAUD_DETECTOR",
		42: "AWS_FSX",
		43: "AWS_GLACIER",
		44: "AWS_GLUE_DATABREW",
		45: "AWS_GUARDDUTY",
		46: "AWS_IAM",
		47: "AWS_KINESIS",
		48: "AWS_KINESIS_VIDEO_STREAMS",
		49: "AWS_KMS",
		50: "AWS_LAMBDA",
		51: "AWS_LEX",
		52: "AWS_LOCATION",
		53: "AWS_LOOKOUT",
		54: "AWS_LOOKOUT_EQUIPMENT",
		55: "AWS_LOOKOUT_METRICS",
		56: "AWS_MANAGED_BLOCKCHAIN",
		57: "AWS_MEMORY_DB",
		58: "AWS_MQ",
		59: "AWS_MSK",
		60: "AWS_MWAA",
		61: "AWS_NEPTUNE",
		62: "AWS_NETWORK_FIREWALL",
		63: "AWS_OPENSEARCH",
		64: "AWS_PROTON",
		65: "AWS_QLDB",
		66: "AWS_RDS",
		67: "AWS_REDSHIFT",
		68: "AWS_ROUTE53",
		69: "AWS_S3",
		70: "AWS_SAGEMAKER",
		71: "AWS_SECRETS_MANAGER",
		72: "AWS_SECURITY_HUB",
		73: "AWS_SES",
		74: "AWS_SHIELD",
		75: "AWS_SNS",
		76: "AWS_SQS",
		77: "AWS_SSM",
		78: "AWS_TIMESTREAM",
		79: "AWS_TRANSFER",
		80: "AWS_TRANSLATE",
		81: "AWS_WAF",
		82: "AWS_WORKSPACES",
		83: "AWS_XRAY",
	}
	AWS_value = map[string]int32{
		"AWS_UNSPECIFIED":           0,
		"AWS_ACCOUNT":               1,
		"AWS_ACM":                   2,
		"AWS_API_GATEWAY":           3,
		"AWS_APP_RUNNER":            4,
		"AWS_APPFLOW":               5,
		"AWS_APPSYNC":               6,
		"AWS_ATHENA":                7,
		"AWS_AUDIT_MANAGER":         8,
		"AWS_AUTO_SCALING":          9,
		"AWS_GLUE":                  10,
		"AWS_BACKUP":                11,
		"AWS_CLOUDFORMATION":        12,
		"AWS_CLOUDFRONT":            13,
		"AWS_CLOUDTRAIL":            14,
		"AWS_CLOUDWATCH_ALARMS":     15,
		"AWS_CLOUDWATCH_LOGS":       16,
		"AWS_CODE_ARTIFACT":         17,
		"AWS_CODE_BUILD":            18,
		"AWS_CODE_PIPELINE":         19,
		"AWS_COMPREHEND":            20,
		"AWS_CONFIG":                21,
		"AWS_CONNECT":               22,
		"AWS_DMS":                   23,
		"AWS_DOCUMENT_DB":           24,
		"AWS_DYNAMODB":              25,
		"AWS_EC2":                   26,
		"AWS_ECR":                   27,
		"AWS_ECS":                   28,
		"AWS_EFS":                   29,
		"AWS_EKS":                   30,
		"AWS_ELASTIC_TRANSCODER":    31,
		"AWS_ELASTIC_BEANSTALK":     32,
		"AWS_ELASTICACHE":           33,
		"AWS_ELB":                   34,
		"AWS_ELBV2":                 35,
		"AWS_EMR":                   36,
		"AWS_EVENTBRIDGE":           37,
		"AWS_FINSPACE":              38,
		"AWS_FIREHOSE":              39,
		"AWS_FORECAST":              40,
		"AWS_FRAUD_DETECTOR":        41,
		"AWS_FSX":                   42,
		"AWS_GLACIER":               43,
		"AWS_GLUE_DATABREW":         44,
		"AWS_GUARDDUTY":             45,
		"AWS_IAM":                   46,
		"AWS_KINESIS":               47,
		"AWS_KINESIS_VIDEO_STREAMS": 48,
		"AWS_KMS":                   49,
		"AWS_LAMBDA":                50,
		"AWS_LEX":                   51,
		"AWS_LOCATION":              52,
		"AWS_LOOKOUT":               53,
		"AWS_LOOKOUT_EQUIPMENT":     54,
		"AWS_LOOKOUT_METRICS":       55,
		"AWS_MANAGED_BLOCKCHAIN":    56,
		"AWS_MEMORY_DB":             57,
		"AWS_MQ":                    58,
		"AWS_MSK":                   59,
		"AWS_MWAA":                  60,
		"AWS_NEPTUNE":               61,
		"AWS_NETWORK_FIREWALL":      62,
		"AWS_OPENSEARCH":            63,
		"AWS_PROTON":                64,
		"AWS_QLDB":                  65,
		"AWS_RDS":                   66,
		"AWS_REDSHIFT":              67,
		"AWS_ROUTE53":               68,
		"AWS_S3":                    69,
		"AWS_SAGEMAKER":             70,
		"AWS_SECRETS_MANAGER":       71,
		"AWS_SECURITY_HUB":          72,
		"AWS_SES":                   73,
		"AWS_SHIELD":                74,
		"AWS_SNS":                   75,
		"AWS_SQS":                   76,
		"AWS_SSM":                   77,
		"AWS_TIMESTREAM":            78,
		"AWS_TRANSFER":              79,
		"AWS_TRANSLATE":             80,
		"AWS_WAF":                   81,
		"AWS_WORKSPACES":            82,
		"AWS_XRAY":                  83,
	}
)

func (x AWS) Enum() *AWS {
	p := new(AWS)
	*p = x
	return p
}

func (x AWS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AWS) Descriptor() protoreflect.EnumDescriptor {
	return file_enum_v1_enum_proto_enumTypes[0].Descriptor()
}

func (AWS) Type() protoreflect.EnumType {
	return &file_enum_v1_enum_proto_enumTypes[0]
}

func (x AWS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AWS.Descriptor instead.
func (AWS) EnumDescriptor() ([]byte, []int) {
	return file_enum_v1_enum_proto_rawDescGZIP(), []int{0}
}

var File_enum_v1_enum_proto protoreflect.FileDescriptor

var file_enum_v1_enum_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2a, 0xf9, 0x0b,
	0x0a, 0x03, 0x41, 0x57, 0x53, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x57, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57,
	0x53, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x57, 0x53, 0x5f, 0x41, 0x43, 0x4d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x57, 0x53, 0x5f,
	0x41, 0x50, 0x49, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x57, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x45, 0x52, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x46, 0x4c, 0x4f, 0x57,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x53, 0x59, 0x4e,
	0x43, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x57, 0x53, 0x5f, 0x41, 0x54, 0x48, 0x45, 0x4e,
	0x41, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x57, 0x53, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x57,
	0x53, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x53, 0x43, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x09,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x57, 0x53, 0x5f, 0x47, 0x4c, 0x55, 0x45, 0x10, 0x0a, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x57, 0x53, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x0b, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4c,
	0x4f, 0x55, 0x44, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57,
	0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x10, 0x0e, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x57, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x53, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x57, 0x53,
	0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x57, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x53,
	0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57, 0x53,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x12, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x13, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x52, 0x45, 0x48, 0x45, 0x4e, 0x44, 0x10, 0x14, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x57, 0x53, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x15, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x16, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53,
	0x5f, 0x44, 0x4d, 0x53, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x57, 0x53, 0x5f, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x42, 0x10, 0x18, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x57, 0x53, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x4f, 0x44, 0x42, 0x10, 0x19, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x43, 0x32, 0x10, 0x1a, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57,
	0x53, 0x5f, 0x45, 0x43, 0x52, 0x10, 0x1b, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x45,
	0x43, 0x53, 0x10, 0x1c, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x46, 0x53, 0x10,
	0x1d, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x4b, 0x53, 0x10, 0x1e, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x4c, 0x41, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x10, 0x1f, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x57,
	0x53, 0x5f, 0x45, 0x4c, 0x41, 0x53, 0x54, 0x49, 0x43, 0x5f, 0x42, 0x45, 0x41, 0x4e, 0x53, 0x54,
	0x41, 0x4c, 0x4b, 0x10, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x4c, 0x41,
	0x53, 0x54, 0x49, 0x43, 0x41, 0x43, 0x48, 0x45, 0x10, 0x21, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57,
	0x53, 0x5f, 0x45, 0x4c, 0x42, 0x10, 0x22, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x5f, 0x45,
	0x4c, 0x42, 0x56, 0x32, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x4d,
	0x52, 0x10, 0x24, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x57, 0x53, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x10, 0x25, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x57, 0x53, 0x5f,
	0x46, 0x49, 0x4e, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x26, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x57,
	0x53, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x48, 0x4f, 0x53, 0x45, 0x10, 0x27, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x57, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x45, 0x43, 0x41, 0x53, 0x54, 0x10, 0x28, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x57, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x55, 0x44, 0x5f, 0x44, 0x45, 0x54, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x10, 0x29, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x46, 0x53,
	0x58, 0x10, 0x2a, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x47, 0x4c, 0x41, 0x43, 0x49,
	0x45, 0x52, 0x10, 0x2b, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x57, 0x53, 0x5f, 0x47, 0x4c, 0x55, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x52, 0x45, 0x57, 0x10, 0x2c, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x57, 0x53, 0x5f, 0x47, 0x55, 0x41, 0x52, 0x44, 0x44, 0x55, 0x54, 0x59, 0x10, 0x2d, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x49, 0x41, 0x4d, 0x10, 0x2e, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x57, 0x53, 0x5f, 0x4b, 0x49, 0x4e, 0x45, 0x53, 0x49, 0x53, 0x10, 0x2f, 0x12, 0x1d, 0x0a, 0x19,
	0x41, 0x57, 0x53, 0x5f, 0x4b, 0x49, 0x4e, 0x45, 0x53, 0x49, 0x53, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x53, 0x10, 0x30, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x57, 0x53, 0x5f, 0x4b, 0x4d, 0x53, 0x10, 0x31, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x57, 0x53, 0x5f,
	0x4c, 0x41, 0x4d, 0x42, 0x44, 0x41, 0x10, 0x32, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f,
	0x4c, 0x45, 0x58, 0x10, 0x33, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x57, 0x53, 0x5f, 0x4c, 0x4f, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x34, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x4c,
	0x4f, 0x4f, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x35, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x57, 0x53, 0x5f,
	0x4c, 0x4f, 0x4f, 0x4b, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x36, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x57, 0x53, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b, 0x4f,
	0x55, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x53, 0x10, 0x37, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x57, 0x53, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x10, 0x38, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x57, 0x53, 0x5f,
	0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x44, 0x42, 0x10, 0x39, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x57, 0x53, 0x5f, 0x4d, 0x51, 0x10, 0x3a, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x4d,
	0x53, 0x4b, 0x10, 0x3b, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x57, 0x53, 0x5f, 0x4d, 0x57, 0x41, 0x41,
	0x10, 0x3c, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x4e, 0x45, 0x50, 0x54, 0x55, 0x4e,
	0x45, 0x10, 0x3d, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x57, 0x53, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x3e, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x57, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10,
	0x3f, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x57, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x4e, 0x10,
	0x40, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x57, 0x53, 0x5f, 0x51, 0x4c, 0x44, 0x42, 0x10, 0x41, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x52, 0x44, 0x53, 0x10, 0x42, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x57, 0x53, 0x5f, 0x52, 0x45, 0x44, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x43, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x57, 0x53, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x35, 0x33, 0x10, 0x44, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x33, 0x10, 0x45, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x57, 0x53, 0x5f, 0x53, 0x41, 0x47, 0x45, 0x4d, 0x41, 0x4b, 0x45, 0x52, 0x10, 0x46, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x53, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x47, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x57, 0x53, 0x5f, 0x53,
	0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x55, 0x42, 0x10, 0x48, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x45, 0x53, 0x10, 0x49, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x57,
	0x53, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x4a, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57,
	0x53, 0x5f, 0x53, 0x4e, 0x53, 0x10, 0x4b, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x53,
	0x51, 0x53, 0x10, 0x4c, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x53, 0x4d, 0x10,
	0x4d, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x52,
	0x45, 0x41, 0x4d, 0x10, 0x4e, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x57, 0x53, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x4f, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x57, 0x53, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x50, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x57,
	0x53, 0x5f, 0x57, 0x41, 0x46, 0x10, 0x51, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x5f, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x53, 0x10, 0x52, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x57, 0x53, 0x5f, 0x58, 0x52, 0x41, 0x59, 0x10, 0x53, 0x42, 0x7a, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x65, 0x6e, 0x75, 0x6d, 0x2d, 0x62, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58,
	0xaa, 0x02, 0x07, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x07, 0x45, 0x6e, 0x75,
	0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x45, 0x6e, 0x75, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x45, 0x6e, 0x75,
	0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enum_v1_enum_proto_rawDescOnce sync.Once
	file_enum_v1_enum_proto_rawDescData = file_enum_v1_enum_proto_rawDesc
)

func file_enum_v1_enum_proto_rawDescGZIP() []byte {
	file_enum_v1_enum_proto_rawDescOnce.Do(func() {
		file_enum_v1_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_enum_v1_enum_proto_rawDescData)
	})
	return file_enum_v1_enum_proto_rawDescData
}

var file_enum_v1_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_enum_v1_enum_proto_goTypes = []any{
	(AWS)(0), // 0: enum.v1.AWS
}
var file_enum_v1_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_enum_v1_enum_proto_init() }
func file_enum_v1_enum_proto_init() {
	if File_enum_v1_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enum_v1_enum_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enum_v1_enum_proto_goTypes,
		DependencyIndexes: file_enum_v1_enum_proto_depIdxs,
		EnumInfos:         file_enum_v1_enum_proto_enumTypes,
	}.Build()
	File_enum_v1_enum_proto = out.File
	file_enum_v1_enum_proto_rawDesc = nil
	file_enum_v1_enum_proto_goTypes = nil
	file_enum_v1_enum_proto_depIdxs = nil
}
